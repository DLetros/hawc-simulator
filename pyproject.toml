[build-system]
requires = ["setuptools>64", "wheel", "setuptools-scm>=8.0"]
build-backend = "setuptools.build_meta"

[project]
name = "hawcsimulator"
dynamic = ["version"]
description="HAWCsat simulator package"
readme = "README.md"
dependencies = ['numpy', 'sasktran2', 'netcdf4', 'appdirs','numba>0.55']
authors = [
    { name = "Daniel Zawada", email = "daniel.zawada@usask.ca" },
]
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

[project.optional-dependencies]
test = ["pytest"]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["osx-arm64"]

[tool.pixi.pypi-dependencies]
hawcsimulator = { path = ".", editable = true }
skretrieval = { path = "../skretrieval", editable = true }
showlib = { path = "../show-lib", editable = true }
aliprocessing = { path = "../ali-processing", editable = true }
hitran-api = "*"

[tool.uv.sources]
skretrieval = { path = "../skretrieval", editable = true }
showlib = { path = "../show-lib", editable = true }
aliprocessing = { path = "../ali-processing", editable = true }

[dependency-groups]
dev = [
    "sphinx",
    "myst-nb",
    "sphinx_book_theme",
    "sphinx_design",
    "pre-commit",
    "pytest",
    "ruff",
    "matplotlib",
    "jupyter",
]


# Run dependencies
[tool.pixi.dependencies]
numpy = "*"
sasktran2 = {version=">2024.11.0"}
astropy = "*"
numba = "*"
pip = "*"
xarray = "*"
netcdf4 = "*"
appdirs = "*"
jupyter = "*"
matplotlib = "*"
ruff = "*"
setuptools_scm = "*"
pre-commit = "*"

# Test dependencies
[tool.pixi.feature.test.dependencies]
pytest = ">=8.3.3,<9"

# Doc dependencies
[tool.pixi.feature.docs]
dependencies = {sphinx = "*", "myst-nb" = "*"}
pypi-dependencies = {sphinx_book_theme = "*", sphinx_design = "*"}

[tool.pixi.feature.py311.dependencies]
python = "3.11.*"
[tool.pixi.feature.py312.dependencies]
python = "3.12.*"

[tool.pixi.environments]
default = ["test", "docs"]
py311 = ["py311"]
py312 = ["py312"]

[tool.pixi.tasks]
show-tutorial = { cmd = "jupyter notebook", cwd = "notebooks/show/tutorial" }
test = { cmd = "pytest tests/", cwd = "." }
pre-commit = { cmd = "pre-commit run -a", cwd = "." }
docs = { cmd = "sphinx-build -b html docs/source docs/build", cwd = "." }
readthedocs = { cmd = "rm -rf $READTHEDOCS_OUTPUT/html && cp -r docs/build/ $READTHEDOCS_OUTPUT/html", depends-on = ["docs"] }

dev-install-showlib = { cmd = "pip install --no-deps -e  ../show-lib", cwd = "."}
dev-install-skretrieval = { cmd = "pip install --no-deps -e ../skretrieval", cwd = "." }
dev-install-aliprocessing = { cmd = "pip install --no-deps -e ../ali-processing", cwd = "." }
dev-install-sasktran2 = { cmd = "pip install --no-deps -e ../sasktran2", cwd = "." }

[tool.setuptools_scm]
write_to = "src/hawcsimulator/_version.py"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = [
    "ignore:(ast.Str|Attribute s|ast.NameConstant|ast.Num) is deprecated:DeprecationWarning:_pytest",  # Python 3.12
]
testpaths = ["tests"]

[tool.ruff]
select = [
    "E", "F", "W", # flake8
    "B",           # flake8-bugbear
    "I",           # isort
    "ARG",         # flake8-unused-arguments
    "C4",          # flake8-comprehensions
    "EM",          # flake8-errmsg
    "ICN",         # flake8-import-conventions
    "ISC",         # flake8-implicit-str-concat
    "G",           # flake8-logging-format
    "PGH",         # pygrep-hooks
    "PIE",         # flake8-pie
    "PL",          # pylint
    "PT",          # flake8-pytest-style
    "PTH",         # flake8-use-pathlib
    "RET",         # flake8-return
    "RUF",         # Ruff-specific
    "SIM",         # flake8-simplify
    "T20",         # flake8-print
    "UP",          # pyupgrade
    "YTT",         # flake8-2020
    "EXE",         # flake8-executable
    "NPY",         # NumPy specific rules
    "PD",          # pandas-vet
]
extend-ignore = [
    "PLR",    # Design related pylint codes
    "E501",   # Line too long
]
src = ["src"]
unfixable = [
    "T20",  # Removes print statements
    "F841", # Removes unused variables
    "F401", # Removes unused imports
]
flake8-unused-arguments.ignore-variadic-names = true
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.per-file-ignores]
"tests/**" = ["T20", "PT009"]
"docs/source/conf.py" = ["E402"]
"**__init__.py" = ["F401"]
